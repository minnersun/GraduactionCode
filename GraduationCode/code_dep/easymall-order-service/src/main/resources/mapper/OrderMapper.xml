<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.tedu.order.mapper.OrderMapper">
	<resultMap type="Order" id="OrderRM">
<!-- 封装一个值 orderId 为查询单表第二个t_order_item做数据封装-->
<id property="orderId" column="order_id"/>
<!-- collection封装对多关系 -->
<collection property="orderItems" javaType="ArrayList"
ofType="OrderItem" column="order_id" select="queryOrderItems"/>
</resultMap>
<select id="queryOrders" parameterType="string"
resultMap="OrderRM">
	<!-- 只查询一张表格数据 t_order-->
	select * from t_order where user_id=#{userId};
</select>
<!-- 为OrderRM准备一个查询sql语句 -->
<select id="queryOrderItems" parameterType="string"
resultType="OrderItem">
	select * from t_order_item where order_id=#{orderId};
</select>
	<insert id="addOrder" parameterType="Order">
	<!-- 主表数据插入 -->
	insert into t_order (
	order_id,order_money,order_receiverinfo,
	order_paystate,order_time,user_id) values(
	#{orderId},#{orderMoney},#{orderReceiverinfo},
	#{orderPaystate},#{orderTime},#{userId});
	<!-- 从表数据 -->
	<foreach 
	collection="orderItems" 
	item="item" 
	separator=";">
	insert into t_order_item (
	order_id,product_id,num,
	product_image,product_name,product_price
	) values
	(#{orderId},#{item.productId},#{item.num},
	#{item.productImage},#{item.productName},#{item.productPrice})
	</foreach>;
	</insert>
	
	<delete id="deleteOrder" parameterType="string">
		delete from t_order where order_id=#{orderId};
		delete from t_order_item where order_id=#{orderId};
	</delete>
</mapper> 












